### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  accessToken: String
  accessTokenExpires: DateTime
  compoundId: String!
  createdAt: DateTime!
  id: Int!
  providerAccountId: String!
  providerId: String!
  providerType: String!
  refreshToken: String
  updatedAt: DateTime!
  userId: Int!
}

type AlternateName {
  ingredient: Ingredient!
  ingredientId: Int!
  name: String!
}

input AlternateNameCreateManyIngredientInput {
  name: String!
}

input AlternateNameCreateManyIngredientInputEnvelope {
  data: [AlternateNameCreateManyIngredientInput!]
  skipDuplicates: Boolean
}

input AlternateNameCreateNestedManyWithoutIngredientInput {
  connect: [AlternateNameWhereUniqueInput!]
  connectOrCreate: [AlternateNameCreateOrConnectWithoutIngredientInput!]
  create: [AlternateNameCreateWithoutIngredientInput!]
  createMany: AlternateNameCreateManyIngredientInputEnvelope
}

input AlternateNameCreateOrConnectWithoutIngredientInput {
  create: AlternateNameCreateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameCreateWithoutIngredientInput {
  name: String!
}

input AlternateNameScalarWhereInput {
  AND: [AlternateNameScalarWhereInput!]
  NOT: [AlternateNameScalarWhereInput!]
  OR: [AlternateNameScalarWhereInput!]
  ingredientId: IntFilter
  name: StringFilter
}

input AlternateNameUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input AlternateNameUpdateManyWithWhereWithoutIngredientInput {
  data: AlternateNameUpdateManyMutationInput!
  where: AlternateNameScalarWhereInput!
}

input AlternateNameUpdateManyWithoutIngredientInput {
  connect: [AlternateNameWhereUniqueInput!]
  connectOrCreate: [AlternateNameCreateOrConnectWithoutIngredientInput!]
  create: [AlternateNameCreateWithoutIngredientInput!]
  createMany: AlternateNameCreateManyIngredientInputEnvelope
  delete: [AlternateNameWhereUniqueInput!]
  deleteMany: [AlternateNameScalarWhereInput!]
  disconnect: [AlternateNameWhereUniqueInput!]
  set: [AlternateNameWhereUniqueInput!]
  update: [AlternateNameUpdateWithWhereUniqueWithoutIngredientInput!]
  updateMany: [AlternateNameUpdateManyWithWhereWithoutIngredientInput!]
  upsert: [AlternateNameUpsertWithWhereUniqueWithoutIngredientInput!]
}

input AlternateNameUpdateWithWhereUniqueWithoutIngredientInput {
  data: AlternateNameUpdateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameUpdateWithoutIngredientInput {
  name: StringFieldUpdateOperationsInput
}

input AlternateNameUpsertWithWhereUniqueWithoutIngredientInput {
  create: AlternateNameCreateWithoutIngredientInput!
  update: AlternateNameUpdateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameWhereUniqueInput {
  name: String
}

type Author {
  books(after: BookWhereUniqueInput, before: BookWhereUniqueInput, first: Int, last: Int): [Book!]!
  id: Int!
  name: String!
}

input AuthorCreateNestedOneWithoutBooksInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutBooksInput
  create: AuthorCreateWithoutBooksInput
}

input AuthorCreateOrConnectWithoutBooksInput {
  create: AuthorCreateWithoutBooksInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateWithoutBooksInput {
  name: String!
}

input AuthorUpdateOneRequiredWithoutBooksInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutBooksInput
  create: AuthorCreateWithoutBooksInput
  update: AuthorUpdateWithoutBooksInput
  upsert: AuthorUpsertWithoutBooksInput
}

input AuthorUpdateWithoutBooksInput {
  name: StringFieldUpdateOperationsInput
}

input AuthorUpsertWithoutBooksInput {
  create: AuthorCreateWithoutBooksInput!
  update: AuthorUpdateWithoutBooksInput!
}

input AuthorWhereUniqueInput {
  id: Int
}

type Book {
  author: Author!
  authorId: Int!
  id: Int!
  recipes(after: RecipeWhereUniqueInput, before: RecipeWhereUniqueInput, first: Int, last: Int): [Recipe!]!
  title: String!
}

input BookCreateNestedOneWithoutRecipesInput {
  connect: BookWhereUniqueInput
  connectOrCreate: BookCreateOrConnectWithoutRecipesInput
  create: BookCreateWithoutRecipesInput
}

input BookCreateOrConnectWithoutRecipesInput {
  create: BookCreateWithoutRecipesInput!
  where: BookWhereUniqueInput!
}

input BookCreateWithoutRecipesInput {
  author: AuthorCreateNestedOneWithoutBooksInput!
  title: String!
}

input BookUpdateOneRequiredWithoutRecipesInput {
  connect: BookWhereUniqueInput
  connectOrCreate: BookCreateOrConnectWithoutRecipesInput
  create: BookCreateWithoutRecipesInput
  update: BookUpdateWithoutRecipesInput
  upsert: BookUpsertWithoutRecipesInput
}

input BookUpdateWithoutRecipesInput {
  author: AuthorUpdateOneRequiredWithoutBooksInput
  title: StringFieldUpdateOperationsInput
}

input BookUpsertWithoutRecipesInput {
  create: BookCreateWithoutRecipesInput!
  update: BookUpdateWithoutRecipesInput!
}

input BookWhereUniqueInput {
  id: Int
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Category {
  evernoteGUID: String!
  id: Int!
  name: String!
  recipes(after: RecipeWhereUniqueInput, before: RecipeWhereUniqueInput, first: Int, last: Int): [Recipe!]!
}

input CategoryCreateNestedManyWithoutRecipesInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutRecipesInput!]
  create: [CategoryCreateWithoutRecipesInput!]
}

input CategoryCreateOrConnectWithoutRecipesInput {
  create: CategoryCreateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutRecipesInput {
  evernoteGUID: String!
  name: String!
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
}

input CategoryUpdateManyMutationInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyWithWhereWithoutRecipesInput {
  data: CategoryUpdateManyMutationInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateManyWithoutRecipesInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutRecipesInput!]
  create: [CategoryCreateWithoutRecipesInput!]
  delete: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutRecipesInput!]
}

input CategoryUpdateWithWhereUniqueWithoutRecipesInput {
  data: CategoryUpdateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpdateWithoutRecipesInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpsertWithWhereUniqueWithoutRecipesInput {
  create: CategoryCreateWithoutRecipesInput!
  update: CategoryUpdateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryWhereUniqueInput {
  id: Int
  name: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumPropertiesNullableListFilter {
  equals: [Properties!]
  has: Properties
  hasEvery: [Properties!]
  hasSome: [Properties!]
  isEmpty: Boolean
}

type Ingredient {
  alternateNames(after: AlternateNameWhereUniqueInput, before: AlternateNameWhereUniqueInput, first: Int, last: Int): [AlternateName!]!
  createdAt: DateTime!
  id: Int!
  isComposedIngredient: Boolean!
  isValidated: Boolean!
  name: String!
  parent: Ingredient
  parentId: Int
  plural: String!
  properties: [Properties!]!
  referencedSubstitutes(after: IngredientWhereUniqueInput, before: IngredientWhereUniqueInput, first: Int, last: Int): [Ingredient!]!
  references(after: ParsedSegmentWhereUniqueInput, before: ParsedSegmentWhereUniqueInput, first: Int, last: Int): [ParsedSegment!]!
  relatedIngredients(after: IngredientWhereUniqueInput, before: IngredientWhereUniqueInput, first: Int, last: Int): [Ingredient!]!
  substitutes(after: IngredientWhereUniqueInput, before: IngredientWhereUniqueInput, first: Int, last: Int): [Ingredient!]!
  updatedAt: DateTime!
}

input IngredientCreateManyParentInput {
  createdAt: DateTime
  id: Int
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  plural: String!
  properties: IngredientCreateManypropertiesInput
  updatedAt: DateTime
}

input IngredientCreateManyParentInputEnvelope {
  data: [IngredientCreateManyParentInput!]
  skipDuplicates: Boolean
}

input IngredientCreateManypropertiesInput {
  set: [Properties!]
}

input IngredientCreateNestedManyWithoutParentInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutParentInput!]
  create: [IngredientCreateWithoutParentInput!]
  createMany: IngredientCreateManyParentInputEnvelope
}

input IngredientCreateNestedManyWithoutReferencedSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutReferencedSubstitutesInput!]
  create: [IngredientCreateWithoutReferencedSubstitutesInput!]
}

input IngredientCreateNestedManyWithoutSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSubstitutesInput!]
  create: [IngredientCreateWithoutSubstitutesInput!]
}

input IngredientCreateNestedOneWithoutReferencesInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutReferencesInput
  create: IngredientCreateWithoutReferencesInput
}

input IngredientCreateNestedOneWithoutRelatedIngredientsInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutRelatedIngredientsInput
  create: IngredientCreateWithoutRelatedIngredientsInput
}

input IngredientCreateOrConnectWithoutParentInput {
  create: IngredientCreateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutReferencedSubstitutesInput {
  create: IngredientCreateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutReferencesInput {
  create: IngredientCreateWithoutReferencesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutRelatedIngredientsInput {
  create: IngredientCreateWithoutRelatedIngredientsInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutSubstitutesInput {
  create: IngredientCreateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateWithoutParentInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredientInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutReferencedSubstitutesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredientInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutReferencesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutRelatedIngredientsInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredientInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutSubstitutesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredientInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  updatedAt: DateTime
}

input IngredientCreatepropertiesInput {
  set: [Properties!]
}

type IngredientLine {
  blockIndex: Int!
  createdAt: DateTime!
  id: Int!
  isParsed: Boolean!
  lineIndex: Int!
  note: Note!
  noteId: Int!
  parsed(after: ParsedSegmentWhereUniqueInput, before: ParsedSegmentWhereUniqueInput, first: Int, last: Int): [ParsedSegment!]!
  recipe: Recipe!
  recipeId: Int!
  reference: String!
  rule: String!
  updatedAt: DateTime!
}

input IngredientLineCreateManyNoteInput {
  blockIndex: Int!
  createdAt: DateTime
  id: Int
  isParsed: Boolean!
  lineIndex: Int!
  recipeId: Int!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateManyNoteInputEnvelope {
  data: [IngredientLineCreateManyNoteInput!]
  skipDuplicates: Boolean
}

input IngredientLineCreateManyRecipeInput {
  blockIndex: Int!
  createdAt: DateTime
  id: Int
  isParsed: Boolean!
  lineIndex: Int!
  noteId: Int!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateManyRecipeInputEnvelope {
  data: [IngredientLineCreateManyRecipeInput!]
  skipDuplicates: Boolean
}

input IngredientLineCreateNestedManyWithoutNoteInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutNoteInput!]
  create: [IngredientLineCreateWithoutNoteInput!]
  createMany: IngredientLineCreateManyNoteInputEnvelope
}

input IngredientLineCreateNestedManyWithoutRecipeInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutRecipeInput!]
  create: [IngredientLineCreateWithoutRecipeInput!]
  createMany: IngredientLineCreateManyRecipeInputEnvelope
}

input IngredientLineCreateNestedOneWithoutParsedInput {
  connect: IngredientLineWhereUniqueInput
  connectOrCreate: IngredientLineCreateOrConnectWithoutParsedInput
  create: IngredientLineCreateWithoutParsedInput
}

input IngredientLineCreateOrConnectWithoutNoteInput {
  create: IngredientLineCreateWithoutNoteInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateOrConnectWithoutParsedInput {
  create: IngredientLineCreateWithoutParsedInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateOrConnectWithoutRecipeInput {
  create: IngredientLineCreateWithoutRecipeInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateWithoutNoteInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  parsed: ParsedSegmentCreateNestedManyWithoutIngredientLineInput
  recipe: RecipeCreateNestedOneWithoutIngredientsInput!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateWithoutParsedInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  note: NoteCreateNestedOneWithoutIngredientsInput!
  recipe: RecipeCreateNestedOneWithoutIngredientsInput!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateWithoutRecipeInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  note: NoteCreateNestedOneWithoutIngredientsInput!
  parsed: ParsedSegmentCreateNestedManyWithoutIngredientLineInput
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineScalarWhereInput {
  AND: [IngredientLineScalarWhereInput!]
  NOT: [IngredientLineScalarWhereInput!]
  OR: [IngredientLineScalarWhereInput!]
  blockIndex: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  isParsed: BoolFilter
  lineIndex: IntFilter
  noteId: IntFilter
  recipeId: IntFilter
  reference: StringFilter
  rule: StringFilter
  updatedAt: DateTimeFilter
}

input IngredientLineUpdateManyMutationInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateManyWithWhereWithoutNoteInput {
  data: IngredientLineUpdateManyMutationInput!
  where: IngredientLineScalarWhereInput!
}

input IngredientLineUpdateManyWithWhereWithoutRecipeInput {
  data: IngredientLineUpdateManyMutationInput!
  where: IngredientLineScalarWhereInput!
}

input IngredientLineUpdateManyWithoutNoteInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutNoteInput!]
  create: [IngredientLineCreateWithoutNoteInput!]
  createMany: IngredientLineCreateManyNoteInputEnvelope
  delete: [IngredientLineWhereUniqueInput!]
  deleteMany: [IngredientLineScalarWhereInput!]
  disconnect: [IngredientLineWhereUniqueInput!]
  set: [IngredientLineWhereUniqueInput!]
  update: [IngredientLineUpdateWithWhereUniqueWithoutNoteInput!]
  updateMany: [IngredientLineUpdateManyWithWhereWithoutNoteInput!]
  upsert: [IngredientLineUpsertWithWhereUniqueWithoutNoteInput!]
}

input IngredientLineUpdateManyWithoutRecipeInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutRecipeInput!]
  create: [IngredientLineCreateWithoutRecipeInput!]
  createMany: IngredientLineCreateManyRecipeInputEnvelope
  delete: [IngredientLineWhereUniqueInput!]
  deleteMany: [IngredientLineScalarWhereInput!]
  disconnect: [IngredientLineWhereUniqueInput!]
  set: [IngredientLineWhereUniqueInput!]
  update: [IngredientLineUpdateWithWhereUniqueWithoutRecipeInput!]
  updateMany: [IngredientLineUpdateManyWithWhereWithoutRecipeInput!]
  upsert: [IngredientLineUpsertWithWhereUniqueWithoutRecipeInput!]
}

input IngredientLineUpdateOneRequiredWithoutParsedInput {
  connect: IngredientLineWhereUniqueInput
  connectOrCreate: IngredientLineCreateOrConnectWithoutParsedInput
  create: IngredientLineCreateWithoutParsedInput
  update: IngredientLineUpdateWithoutParsedInput
  upsert: IngredientLineUpsertWithoutParsedInput
}

input IngredientLineUpdateWithWhereUniqueWithoutNoteInput {
  data: IngredientLineUpdateWithoutNoteInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpdateWithWhereUniqueWithoutRecipeInput {
  data: IngredientLineUpdateWithoutRecipeInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpdateWithoutNoteInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  parsed: ParsedSegmentUpdateManyWithoutIngredientLineInput
  recipe: RecipeUpdateOneRequiredWithoutIngredientsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateWithoutParsedInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  note: NoteUpdateOneRequiredWithoutIngredientsInput
  recipe: RecipeUpdateOneRequiredWithoutIngredientsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateWithoutRecipeInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  note: NoteUpdateOneRequiredWithoutIngredientsInput
  parsed: ParsedSegmentUpdateManyWithoutIngredientLineInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpsertWithWhereUniqueWithoutNoteInput {
  create: IngredientLineCreateWithoutNoteInput!
  update: IngredientLineUpdateWithoutNoteInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpsertWithWhereUniqueWithoutRecipeInput {
  create: IngredientLineCreateWithoutRecipeInput!
  update: IngredientLineUpdateWithoutRecipeInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpsertWithoutParsedInput {
  create: IngredientLineCreateWithoutParsedInput!
  update: IngredientLineUpdateWithoutParsedInput!
}

input IngredientLineWhereUniqueInput {
  id: Int
}

input IngredientScalarWhereInput {
  AND: [IngredientScalarWhereInput!]
  NOT: [IngredientScalarWhereInput!]
  OR: [IngredientScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  isComposedIngredient: BoolFilter
  isValidated: BoolFilter
  name: StringFilter
  parentId: IntNullableFilter
  plural: StringFilter
  properties: EnumPropertiesNullableListFilter
  updatedAt: DateTimeFilter
}

input IngredientUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateManyWithWhereWithoutParentInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithWhereWithoutReferencedSubstitutesInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithWhereWithoutSubstitutesInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithoutParentInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutParentInput!]
  create: [IngredientCreateWithoutParentInput!]
  createMany: IngredientCreateManyParentInputEnvelope
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutParentInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutParentInput!]
}

input IngredientUpdateManyWithoutReferencedSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutReferencedSubstitutesInput!]
  create: [IngredientCreateWithoutReferencedSubstitutesInput!]
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutReferencedSubstitutesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutReferencedSubstitutesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutReferencedSubstitutesInput!]
}

input IngredientUpdateManyWithoutSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSubstitutesInput!]
  create: [IngredientCreateWithoutSubstitutesInput!]
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutSubstitutesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutSubstitutesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutSubstitutesInput!]
}

input IngredientUpdateOneRequiredWithoutReferencesInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutReferencesInput
  create: IngredientCreateWithoutReferencesInput
  update: IngredientUpdateWithoutReferencesInput
  upsert: IngredientUpsertWithoutReferencesInput
}

input IngredientUpdateOneWithoutRelatedIngredientsInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutRelatedIngredientsInput
  create: IngredientCreateWithoutRelatedIngredientsInput
  delete: Boolean
  disconnect: Boolean
  update: IngredientUpdateWithoutRelatedIngredientsInput
  upsert: IngredientUpsertWithoutRelatedIngredientsInput
}

input IngredientUpdateWithWhereUniqueWithoutParentInput {
  data: IngredientUpdateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithWhereUniqueWithoutReferencedSubstitutesInput {
  data: IngredientUpdateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithWhereUniqueWithoutSubstitutesInput {
  data: IngredientUpdateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithoutParentInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredientInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutReferencedSubstitutesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  references: ParsedSegmentUpdateManyWithoutIngredientInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutReferencesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutRelatedIngredientsInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredientInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutSubstitutesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredientInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdatepropertiesInput {
  push: Properties
  set: [Properties!]
}

input IngredientUpsertWithWhereUniqueWithoutParentInput {
  create: IngredientCreateWithoutParentInput!
  update: IngredientUpdateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithWhereUniqueWithoutReferencedSubstitutesInput {
  create: IngredientCreateWithoutReferencedSubstitutesInput!
  update: IngredientUpdateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithWhereUniqueWithoutSubstitutesInput {
  create: IngredientCreateWithoutSubstitutesInput!
  update: IngredientUpdateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithoutReferencesInput {
  create: IngredientCreateWithoutReferencesInput!
  update: IngredientUpdateWithoutReferencesInput!
}

input IngredientUpsertWithoutRelatedIngredientsInput {
  create: IngredientCreateWithoutRelatedIngredientsInput!
  update: IngredientUpdateWithoutRelatedIngredientsInput!
}

input IngredientWhereUniqueInput {
  id: Int
  name: String
  plural: String
}

type InstructionLine {
  blockIndex: DateTime!
  createdAt: DateTime!
  id: Int!
  note: Note!
  noteId: Int!
  recipe: Recipe!
  recipeId: Int!
  reference: String!
  updatedAt: DateTime!
}

input InstructionLineCreateManyNoteInput {
  blockIndex: DateTime!
  createdAt: DateTime
  id: Int
  recipeId: Int!
  reference: String!
  updatedAt: DateTime
}

input InstructionLineCreateManyNoteInputEnvelope {
  data: [InstructionLineCreateManyNoteInput!]
  skipDuplicates: Boolean
}

input InstructionLineCreateManyRecipeInput {
  blockIndex: DateTime!
  createdAt: DateTime
  id: Int
  noteId: Int!
  reference: String!
  updatedAt: DateTime
}

input InstructionLineCreateManyRecipeInputEnvelope {
  data: [InstructionLineCreateManyRecipeInput!]
  skipDuplicates: Boolean
}

input InstructionLineCreateNestedManyWithoutNoteInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutNoteInput!]
  create: [InstructionLineCreateWithoutNoteInput!]
  createMany: InstructionLineCreateManyNoteInputEnvelope
}

input InstructionLineCreateNestedManyWithoutRecipeInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutRecipeInput!]
  create: [InstructionLineCreateWithoutRecipeInput!]
  createMany: InstructionLineCreateManyRecipeInputEnvelope
}

input InstructionLineCreateOrConnectWithoutNoteInput {
  create: InstructionLineCreateWithoutNoteInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineCreateOrConnectWithoutRecipeInput {
  create: InstructionLineCreateWithoutRecipeInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineCreateWithoutNoteInput {
  blockIndex: DateTime!
  createdAt: DateTime
  recipe: RecipeCreateNestedOneWithoutInstructionsInput!
  reference: String!
  updatedAt: DateTime
}

input InstructionLineCreateWithoutRecipeInput {
  blockIndex: DateTime!
  createdAt: DateTime
  note: NoteCreateNestedOneWithoutInstructionsInput!
  reference: String!
  updatedAt: DateTime
}

input InstructionLineScalarWhereInput {
  AND: [InstructionLineScalarWhereInput!]
  NOT: [InstructionLineScalarWhereInput!]
  OR: [InstructionLineScalarWhereInput!]
  blockIndex: DateTimeFilter
  createdAt: DateTimeFilter
  id: IntFilter
  noteId: IntFilter
  recipeId: IntFilter
  reference: StringFilter
  updatedAt: DateTimeFilter
}

input InstructionLineUpdateManyMutationInput {
  blockIndex: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  reference: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpdateManyWithWhereWithoutNoteInput {
  data: InstructionLineUpdateManyMutationInput!
  where: InstructionLineScalarWhereInput!
}

input InstructionLineUpdateManyWithWhereWithoutRecipeInput {
  data: InstructionLineUpdateManyMutationInput!
  where: InstructionLineScalarWhereInput!
}

input InstructionLineUpdateManyWithoutNoteInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutNoteInput!]
  create: [InstructionLineCreateWithoutNoteInput!]
  createMany: InstructionLineCreateManyNoteInputEnvelope
  delete: [InstructionLineWhereUniqueInput!]
  deleteMany: [InstructionLineScalarWhereInput!]
  disconnect: [InstructionLineWhereUniqueInput!]
  set: [InstructionLineWhereUniqueInput!]
  update: [InstructionLineUpdateWithWhereUniqueWithoutNoteInput!]
  updateMany: [InstructionLineUpdateManyWithWhereWithoutNoteInput!]
  upsert: [InstructionLineUpsertWithWhereUniqueWithoutNoteInput!]
}

input InstructionLineUpdateManyWithoutRecipeInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutRecipeInput!]
  create: [InstructionLineCreateWithoutRecipeInput!]
  createMany: InstructionLineCreateManyRecipeInputEnvelope
  delete: [InstructionLineWhereUniqueInput!]
  deleteMany: [InstructionLineScalarWhereInput!]
  disconnect: [InstructionLineWhereUniqueInput!]
  set: [InstructionLineWhereUniqueInput!]
  update: [InstructionLineUpdateWithWhereUniqueWithoutRecipeInput!]
  updateMany: [InstructionLineUpdateManyWithWhereWithoutRecipeInput!]
  upsert: [InstructionLineUpsertWithWhereUniqueWithoutRecipeInput!]
}

input InstructionLineUpdateWithWhereUniqueWithoutNoteInput {
  data: InstructionLineUpdateWithoutNoteInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpdateWithWhereUniqueWithoutRecipeInput {
  data: InstructionLineUpdateWithoutRecipeInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpdateWithoutNoteInput {
  blockIndex: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  recipe: RecipeUpdateOneRequiredWithoutInstructionsInput
  reference: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpdateWithoutRecipeInput {
  blockIndex: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  note: NoteUpdateOneRequiredWithoutInstructionsInput
  reference: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpsertWithWhereUniqueWithoutNoteInput {
  create: InstructionLineCreateWithoutNoteInput!
  update: InstructionLineUpdateWithoutNoteInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpsertWithWhereUniqueWithoutRecipeInput {
  create: InstructionLineCreateWithoutRecipeInput!
  update: InstructionLineUpdateWithoutRecipeInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineWhereUniqueInput {
  id: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  authenticateEvernote(oauthVerifier: String): String
  createOneUser(data: UserCreateInput!): User!
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Note {
  categories: [String!]!
  content: String!
  createdAt: DateTime!
  evernoteGUID: String!
  id: Int!
  image: String!
  ingredients(after: IngredientLineWhereUniqueInput, before: IngredientLineWhereUniqueInput, first: Int, last: Int): [IngredientLine!]!
  instructions(after: InstructionLineWhereUniqueInput, before: InstructionLineWhereUniqueInput, first: Int, last: Int): [InstructionLine!]!
  isParsed: Boolean!
  source: String
  tags: [String!]!
  title: String!
  updatedAt: DateTime!
}

input NoteCreateNestedOneWithoutIngredientsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutIngredientsInput
  create: NoteCreateWithoutIngredientsInput
}

input NoteCreateNestedOneWithoutInstructionsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutInstructionsInput
  create: NoteCreateWithoutInstructionsInput
}

input NoteCreateOrConnectWithoutIngredientsInput {
  create: NoteCreateWithoutIngredientsInput!
  where: NoteWhereUniqueInput!
}

input NoteCreateOrConnectWithoutInstructionsInput {
  create: NoteCreateWithoutInstructionsInput!
  where: NoteWhereUniqueInput!
}

input NoteCreateWithoutIngredientsInput {
  categories: NoteCreatecategoriesInput
  content: String!
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  instructions: InstructionLineCreateNestedManyWithoutNoteInput
  isParsed: Boolean
  source: String
  tags: NoteCreatetagsInput
  title: String!
  updatedAt: DateTime
}

input NoteCreateWithoutInstructionsInput {
  categories: NoteCreatecategoriesInput
  content: String!
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  ingredients: IngredientLineCreateNestedManyWithoutNoteInput
  isParsed: Boolean
  source: String
  tags: NoteCreatetagsInput
  title: String!
  updatedAt: DateTime
}

input NoteCreatecategoriesInput {
  set: [String!]
}

input NoteCreatetagsInput {
  set: [String!]
}

input NoteUpdateOneRequiredWithoutIngredientsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutIngredientsInput
  create: NoteCreateWithoutIngredientsInput
  update: NoteUpdateWithoutIngredientsInput
  upsert: NoteUpsertWithoutIngredientsInput
}

input NoteUpdateOneRequiredWithoutInstructionsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutInstructionsInput
  create: NoteCreateWithoutInstructionsInput
  update: NoteUpdateWithoutInstructionsInput
  upsert: NoteUpsertWithoutInstructionsInput
}

input NoteUpdateWithoutIngredientsInput {
  categories: NoteUpdatecategoriesInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  instructions: InstructionLineUpdateManyWithoutNoteInput
  isParsed: BoolFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  tags: NoteUpdatetagsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NoteUpdateWithoutInstructionsInput {
  categories: NoteUpdatecategoriesInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  ingredients: IngredientLineUpdateManyWithoutNoteInput
  isParsed: BoolFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  tags: NoteUpdatetagsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NoteUpdatecategoriesInput {
  push: String
  set: [String!]
}

input NoteUpdatetagsInput {
  push: String
  set: [String!]
}

input NoteUpsertWithoutIngredientsInput {
  create: NoteCreateWithoutIngredientsInput!
  update: NoteUpdateWithoutIngredientsInput!
}

input NoteUpsertWithoutInstructionsInput {
  create: NoteCreateWithoutInstructionsInput!
  update: NoteUpdateWithoutInstructionsInput!
}

input NoteWhereUniqueInput {
  id: Int
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumRoleFieldUpdateOperationsInput {
  set: Role
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type ParsedSegment {
  createdAt: DateTime!
  id: Int!
  index: Int!
  ingredient: Ingredient!
  ingredientId: Int!
  ingredientLine: IngredientLine!
  ingredientLineId: Int!
  rule: String!
  type: String!
  updatedAt: DateTime!
  value: String!
}

input ParsedSegmentCreateManyIngredientInput {
  createdAt: DateTime
  id: Int
  index: Int!
  ingredientLineId: Int!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateManyIngredientInputEnvelope {
  data: [ParsedSegmentCreateManyIngredientInput!]
  skipDuplicates: Boolean
}

input ParsedSegmentCreateManyIngredientLineInput {
  createdAt: DateTime
  id: Int
  index: Int!
  ingredientId: Int!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateManyIngredientLineInputEnvelope {
  data: [ParsedSegmentCreateManyIngredientLineInput!]
  skipDuplicates: Boolean
}

input ParsedSegmentCreateNestedManyWithoutIngredientInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientInput!]
  create: [ParsedSegmentCreateWithoutIngredientInput!]
  createMany: ParsedSegmentCreateManyIngredientInputEnvelope
}

input ParsedSegmentCreateNestedManyWithoutIngredientLineInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientLineInput!]
  create: [ParsedSegmentCreateWithoutIngredientLineInput!]
  createMany: ParsedSegmentCreateManyIngredientLineInputEnvelope
}

input ParsedSegmentCreateOrConnectWithoutIngredientInput {
  create: ParsedSegmentCreateWithoutIngredientInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentCreateOrConnectWithoutIngredientLineInput {
  create: ParsedSegmentCreateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentCreateWithoutIngredientInput {
  createdAt: DateTime
  index: Int!
  ingredientLine: IngredientLineCreateNestedOneWithoutParsedInput!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateWithoutIngredientLineInput {
  createdAt: DateTime
  index: Int!
  ingredient: IngredientCreateNestedOneWithoutReferencesInput!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentScalarWhereInput {
  AND: [ParsedSegmentScalarWhereInput!]
  NOT: [ParsedSegmentScalarWhereInput!]
  OR: [ParsedSegmentScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  index: IntFilter
  ingredientId: IntFilter
  ingredientLineId: IntFilter
  rule: StringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  value: StringFilter
}

input ParsedSegmentUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpdateManyWithWhereWithoutIngredientInput {
  data: ParsedSegmentUpdateManyMutationInput!
  where: ParsedSegmentScalarWhereInput!
}

input ParsedSegmentUpdateManyWithWhereWithoutIngredientLineInput {
  data: ParsedSegmentUpdateManyMutationInput!
  where: ParsedSegmentScalarWhereInput!
}

input ParsedSegmentUpdateManyWithoutIngredientInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientInput!]
  create: [ParsedSegmentCreateWithoutIngredientInput!]
  createMany: ParsedSegmentCreateManyIngredientInputEnvelope
  delete: [ParsedSegmentWhereUniqueInput!]
  deleteMany: [ParsedSegmentScalarWhereInput!]
  disconnect: [ParsedSegmentWhereUniqueInput!]
  set: [ParsedSegmentWhereUniqueInput!]
  update: [ParsedSegmentUpdateWithWhereUniqueWithoutIngredientInput!]
  updateMany: [ParsedSegmentUpdateManyWithWhereWithoutIngredientInput!]
  upsert: [ParsedSegmentUpsertWithWhereUniqueWithoutIngredientInput!]
}

input ParsedSegmentUpdateManyWithoutIngredientLineInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientLineInput!]
  create: [ParsedSegmentCreateWithoutIngredientLineInput!]
  createMany: ParsedSegmentCreateManyIngredientLineInputEnvelope
  delete: [ParsedSegmentWhereUniqueInput!]
  deleteMany: [ParsedSegmentScalarWhereInput!]
  disconnect: [ParsedSegmentWhereUniqueInput!]
  set: [ParsedSegmentWhereUniqueInput!]
  update: [ParsedSegmentUpdateWithWhereUniqueWithoutIngredientLineInput!]
  updateMany: [ParsedSegmentUpdateManyWithWhereWithoutIngredientLineInput!]
  upsert: [ParsedSegmentUpsertWithWhereUniqueWithoutIngredientLineInput!]
}

input ParsedSegmentUpdateWithWhereUniqueWithoutIngredientInput {
  data: ParsedSegmentUpdateWithoutIngredientInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpdateWithWhereUniqueWithoutIngredientLineInput {
  data: ParsedSegmentUpdateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpdateWithoutIngredientInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  ingredientLine: IngredientLineUpdateOneRequiredWithoutParsedInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpdateWithoutIngredientLineInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  ingredient: IngredientUpdateOneRequiredWithoutReferencesInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpsertWithWhereUniqueWithoutIngredientInput {
  create: ParsedSegmentCreateWithoutIngredientInput!
  update: ParsedSegmentUpdateWithoutIngredientInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpsertWithWhereUniqueWithoutIngredientLineInput {
  create: ParsedSegmentCreateWithoutIngredientLineInput!
  update: ParsedSegmentUpdateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentWhereUniqueInput {
  id: Int
}

enum Properties {
  DAIRY
  FISH
  GLUTEN
  MEAT
  POULTRY
  SOY
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

type Recipe {
  book: Book!
  bookId: Int!
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  createdAt: DateTime!
  evernoteGUID: String!
  id: Int!
  image: String!
  importedUser: User!
  importedUserId: Int!
  ingredients(after: IngredientLineWhereUniqueInput, before: IngredientLineWhereUniqueInput, first: Int, last: Int): [IngredientLine!]!
  instructions(after: InstructionLineWhereUniqueInput, before: InstructionLineWhereUniqueInput, first: Int, last: Int): [InstructionLine!]!
  sources: [String!]!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  title: String!
  updatedAt: DateTime!
}

input RecipeCreateManyImportedUserInput {
  bookId: Int!
  createdAt: DateTime
  evernoteGUID: String!
  id: Int
  image: String!
  sources: RecipeCreateManysourcesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateManyImportedUserInputEnvelope {
  data: [RecipeCreateManyImportedUserInput!]
  skipDuplicates: Boolean
}

input RecipeCreateManysourcesInput {
  set: [String!]
}

input RecipeCreateNestedManyWithoutImportedUserInput {
  connect: [RecipeWhereUniqueInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutImportedUserInput!]
  create: [RecipeCreateWithoutImportedUserInput!]
  createMany: RecipeCreateManyImportedUserInputEnvelope
}

input RecipeCreateNestedOneWithoutIngredientsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutIngredientsInput
  create: RecipeCreateWithoutIngredientsInput
}

input RecipeCreateNestedOneWithoutInstructionsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutInstructionsInput
  create: RecipeCreateWithoutInstructionsInput
}

input RecipeCreateOrConnectWithoutImportedUserInput {
  create: RecipeCreateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateOrConnectWithoutIngredientsInput {
  create: RecipeCreateWithoutIngredientsInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateOrConnectWithoutInstructionsInput {
  create: RecipeCreateWithoutInstructionsInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateWithoutImportedUserInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  ingredients: IngredientLineCreateNestedManyWithoutRecipeInput
  instructions: InstructionLineCreateNestedManyWithoutRecipeInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateWithoutIngredientsInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  importedUser: UserCreateNestedOneWithoutImportedRecipesInput!
  instructions: InstructionLineCreateNestedManyWithoutRecipeInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateWithoutInstructionsInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  importedUser: UserCreateNestedOneWithoutImportedRecipesInput!
  ingredients: IngredientLineCreateNestedManyWithoutRecipeInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreatesourcesInput {
  set: [String!]
}

input RecipeScalarWhereInput {
  AND: [RecipeScalarWhereInput!]
  NOT: [RecipeScalarWhereInput!]
  OR: [RecipeScalarWhereInput!]
  bookId: IntFilter
  createdAt: DateTimeFilter
  evernoteGUID: StringFilter
  id: IntFilter
  image: StringFilter
  importedUserId: IntFilter
  sources: StringNullableListFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input RecipeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  sources: RecipeUpdatesourcesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateManyWithWhereWithoutImportedUserInput {
  data: RecipeUpdateManyMutationInput!
  where: RecipeScalarWhereInput!
}

input RecipeUpdateManyWithoutImportedUserInput {
  connect: [RecipeWhereUniqueInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutImportedUserInput!]
  create: [RecipeCreateWithoutImportedUserInput!]
  createMany: RecipeCreateManyImportedUserInputEnvelope
  delete: [RecipeWhereUniqueInput!]
  deleteMany: [RecipeScalarWhereInput!]
  disconnect: [RecipeWhereUniqueInput!]
  set: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutImportedUserInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutImportedUserInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutImportedUserInput!]
}

input RecipeUpdateOneRequiredWithoutIngredientsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutIngredientsInput
  create: RecipeCreateWithoutIngredientsInput
  update: RecipeUpdateWithoutIngredientsInput
  upsert: RecipeUpsertWithoutIngredientsInput
}

input RecipeUpdateOneRequiredWithoutInstructionsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutInstructionsInput
  create: RecipeCreateWithoutInstructionsInput
  update: RecipeUpdateWithoutInstructionsInput
  upsert: RecipeUpsertWithoutInstructionsInput
}

input RecipeUpdateWithWhereUniqueWithoutImportedUserInput {
  data: RecipeUpdateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeUpdateWithoutImportedUserInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  ingredients: IngredientLineUpdateManyWithoutRecipeInput
  instructions: InstructionLineUpdateManyWithoutRecipeInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateWithoutIngredientsInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  importedUser: UserUpdateOneRequiredWithoutImportedRecipesInput
  instructions: InstructionLineUpdateManyWithoutRecipeInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateWithoutInstructionsInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  importedUser: UserUpdateOneRequiredWithoutImportedRecipesInput
  ingredients: IngredientLineUpdateManyWithoutRecipeInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdatesourcesInput {
  push: String
  set: [String!]
}

input RecipeUpsertWithWhereUniqueWithoutImportedUserInput {
  create: RecipeCreateWithoutImportedUserInput!
  update: RecipeUpdateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeUpsertWithoutIngredientsInput {
  create: RecipeCreateWithoutIngredientsInput!
  update: RecipeUpdateWithoutIngredientsInput!
}

input RecipeUpsertWithoutInstructionsInput {
  create: RecipeCreateWithoutInstructionsInput!
  update: RecipeUpdateWithoutInstructionsInput!
}

input RecipeWhereUniqueInput {
  id: Int
}

enum Role {
  ADMIN
  USER
}

type Session {
  accessToken: String!
  createdAt: DateTime!
  expires: DateTime!
  id: Int!
  sessionToken: String!
  updatedAt: DateTime!
  userId: Int!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

type Tag {
  evernoteGUID: String!
  id: Int!
  name: String!
  recipes(after: RecipeWhereUniqueInput, before: RecipeWhereUniqueInput, first: Int, last: Int): [Recipe!]!
}

input TagCreateNestedManyWithoutRecipesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutRecipesInput!]
  create: [TagCreateWithoutRecipesInput!]
}

input TagCreateOrConnectWithoutRecipesInput {
  create: TagCreateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutRecipesInput {
  evernoteGUID: String!
  name: String!
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
}

input TagUpdateManyMutationInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutRecipesInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutRecipesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutRecipesInput!]
  create: [TagCreateWithoutRecipesInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [TagUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutRecipesInput!]
}

input TagUpdateWithWhereUniqueWithoutRecipesInput {
  data: TagUpdateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutRecipesInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutRecipesInput {
  create: TagCreateWithoutRecipesInput!
  update: TagUpdateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagWhereUniqueInput {
  id: Int
  name: String
}

type User {
  createdAt: DateTime!
  email: String
  emailVerified: DateTime
  id: Int!
  image: String
  importedRecipes(after: RecipeWhereUniqueInput, before: RecipeWhereUniqueInput, first: Int, last: Int): [Recipe!]!
  name: String
  role: Role
  updatedAt: DateTime!
}

input UserCreateInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  importedRecipes: RecipeCreateNestedManyWithoutImportedUserInput
  name: String
  role: Role
  updatedAt: DateTime
}

input UserCreateNestedOneWithoutImportedRecipesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImportedRecipesInput
  create: UserCreateWithoutImportedRecipesInput
}

input UserCreateOrConnectWithoutImportedRecipesInput {
  create: UserCreateWithoutImportedRecipesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutImportedRecipesInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  name: String
  role: Role
  updatedAt: DateTime
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  importedRecipes: RecipeUpdateManyWithoutImportedUserInput
  name: NullableStringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutImportedRecipesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImportedRecipesInput
  create: UserCreateWithoutImportedRecipesInput
  update: UserUpdateWithoutImportedRecipesInput
  upsert: UserUpsertWithoutImportedRecipesInput
}

input UserUpdateWithoutImportedRecipesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutImportedRecipesInput {
  create: UserCreateWithoutImportedRecipesInput!
  update: UserUpdateWithoutImportedRecipesInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
