### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

input AlternateNameCreateManyIngredientInput {
  name: String!
}

input AlternateNameCreateManyIngredientInputEnvelope {
  data: [AlternateNameCreateManyIngredientInput!]
  skipDuplicates: Boolean
}

input AlternateNameCreateNestedManyWithoutIngredientInput {
  connect: [AlternateNameWhereUniqueInput!]
  connectOrCreate: [AlternateNameCreateOrConnectWithoutIngredientInput!]
  create: [AlternateNameCreateWithoutIngredientInput!]
  createMany: AlternateNameCreateManyIngredientInputEnvelope
}

input AlternateNameCreateOrConnectWithoutIngredientInput {
  create: AlternateNameCreateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameCreateWithoutIngredientInput {
  name: String!
}

input AlternateNameListRelationFilter {
  every: AlternateNameWhereInput
  none: AlternateNameWhereInput
  some: AlternateNameWhereInput
}

input AlternateNameScalarWhereInput {
  AND: [AlternateNameScalarWhereInput!]
  NOT: [AlternateNameScalarWhereInput!]
  OR: [AlternateNameScalarWhereInput!]
  ingredientId: IntFilter
  name: StringFilter
}

input AlternateNameUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input AlternateNameUpdateManyWithWhereWithoutIngredientInput {
  data: AlternateNameUpdateManyMutationInput!
  where: AlternateNameScalarWhereInput!
}

input AlternateNameUpdateManyWithoutIngredientInput {
  connect: [AlternateNameWhereUniqueInput!]
  connectOrCreate: [AlternateNameCreateOrConnectWithoutIngredientInput!]
  create: [AlternateNameCreateWithoutIngredientInput!]
  createMany: AlternateNameCreateManyIngredientInputEnvelope
  delete: [AlternateNameWhereUniqueInput!]
  deleteMany: [AlternateNameScalarWhereInput!]
  disconnect: [AlternateNameWhereUniqueInput!]
  set: [AlternateNameWhereUniqueInput!]
  update: [AlternateNameUpdateWithWhereUniqueWithoutIngredientInput!]
  updateMany: [AlternateNameUpdateManyWithWhereWithoutIngredientInput!]
  upsert: [AlternateNameUpsertWithWhereUniqueWithoutIngredientInput!]
}

input AlternateNameUpdateWithWhereUniqueWithoutIngredientInput {
  data: AlternateNameUpdateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameUpdateWithoutIngredientInput {
  name: StringFieldUpdateOperationsInput
}

input AlternateNameUpsertWithWhereUniqueWithoutIngredientInput {
  create: AlternateNameCreateWithoutIngredientInput!
  update: AlternateNameUpdateWithoutIngredientInput!
  where: AlternateNameWhereUniqueInput!
}

input AlternateNameWhereInput {
  AND: [AlternateNameWhereInput!]
  NOT: [AlternateNameWhereInput!]
  OR: [AlternateNameWhereInput!]
  ingredient: IngredientWhereInput
  ingredientId: IntFilter
  name: StringFilter
}

input AlternateNameWhereUniqueInput {
  name: String
}

input AuthorCreateNestedOneWithoutBooksInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutBooksInput
  create: AuthorCreateWithoutBooksInput
}

input AuthorCreateOrConnectWithoutBooksInput {
  create: AuthorCreateWithoutBooksInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateWithoutBooksInput {
  name: String!
}

input AuthorUpdateOneRequiredWithoutBooksInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutBooksInput
  create: AuthorCreateWithoutBooksInput
  update: AuthorUpdateWithoutBooksInput
  upsert: AuthorUpsertWithoutBooksInput
}

input AuthorUpdateWithoutBooksInput {
  name: StringFieldUpdateOperationsInput
}

input AuthorUpsertWithoutBooksInput {
  create: AuthorCreateWithoutBooksInput!
  update: AuthorUpdateWithoutBooksInput!
}

input AuthorWhereInput {
  AND: [AuthorWhereInput!]
  NOT: [AuthorWhereInput!]
  OR: [AuthorWhereInput!]
  books: BookListRelationFilter
  id: IntFilter
  name: StringFilter
}

input AuthorWhereUniqueInput {
  id: Int
}

input BookCreateNestedOneWithoutRecipesInput {
  connect: BookWhereUniqueInput
  connectOrCreate: BookCreateOrConnectWithoutRecipesInput
  create: BookCreateWithoutRecipesInput
}

input BookCreateOrConnectWithoutRecipesInput {
  create: BookCreateWithoutRecipesInput!
  where: BookWhereUniqueInput!
}

input BookCreateWithoutRecipesInput {
  author: AuthorCreateNestedOneWithoutBooksInput!
  title: String!
}

input BookListRelationFilter {
  every: BookWhereInput
  none: BookWhereInput
  some: BookWhereInput
}

input BookUpdateOneRequiredWithoutRecipesInput {
  connect: BookWhereUniqueInput
  connectOrCreate: BookCreateOrConnectWithoutRecipesInput
  create: BookCreateWithoutRecipesInput
  update: BookUpdateWithoutRecipesInput
  upsert: BookUpsertWithoutRecipesInput
}

input BookUpdateWithoutRecipesInput {
  author: AuthorUpdateOneRequiredWithoutBooksInput
  title: StringFieldUpdateOperationsInput
}

input BookUpsertWithoutRecipesInput {
  create: BookCreateWithoutRecipesInput!
  update: BookUpdateWithoutRecipesInput!
}

input BookWhereInput {
  AND: [BookWhereInput!]
  NOT: [BookWhereInput!]
  OR: [BookWhereInput!]
  author: AuthorWhereInput
  authorId: IntFilter
  id: IntFilter
  recipes: RecipeListRelationFilter
  title: StringFilter
}

input BookWhereUniqueInput {
  id: Int
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input CategoryCreateNestedManyWithoutRecipesInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutRecipesInput!]
  create: [CategoryCreateWithoutRecipesInput!]
}

input CategoryCreateOrConnectWithoutRecipesInput {
  create: CategoryCreateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutRecipesInput {
  evernoteGUID: String!
  name: String!
}

input CategoryListRelationFilter {
  every: CategoryWhereInput
  none: CategoryWhereInput
  some: CategoryWhereInput
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
}

input CategoryUpdateManyMutationInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyWithWhereWithoutRecipesInput {
  data: CategoryUpdateManyMutationInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateManyWithoutRecipesInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutRecipesInput!]
  create: [CategoryCreateWithoutRecipesInput!]
  delete: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutRecipesInput!]
}

input CategoryUpdateWithWhereUniqueWithoutRecipesInput {
  data: CategoryUpdateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpdateWithoutRecipesInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpsertWithWhereUniqueWithoutRecipesInput {
  create: CategoryCreateWithoutRecipesInput!
  update: CategoryUpdateWithoutRecipesInput!
  where: CategoryWhereUniqueInput!
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
  recipes: RecipeListRelationFilter
}

input CategoryWhereUniqueInput {
  id: Int
  name: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumPropertiesNullableListFilter {
  equals: [Properties!]
  has: Properties
  hasEvery: [Properties!]
  hasSome: [Properties!]
  isEmpty: Boolean
}

input EnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input IngredientCreateManyParentInput {
  createdAt: DateTime
  id: Int
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  plural: String!
  properties: IngredientCreateManypropertiesInput
  updatedAt: DateTime
}

input IngredientCreateManyParentInputEnvelope {
  data: [IngredientCreateManyParentInput!]
  skipDuplicates: Boolean
}

input IngredientCreateManypropertiesInput {
  set: [Properties!]
}

input IngredientCreateNestedManyWithoutParentInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutParentInput!]
  create: [IngredientCreateWithoutParentInput!]
  createMany: IngredientCreateManyParentInputEnvelope
}

input IngredientCreateNestedManyWithoutReferencedSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutReferencedSubstitutesInput!]
  create: [IngredientCreateWithoutReferencedSubstitutesInput!]
}

input IngredientCreateNestedManyWithoutSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSubstitutesInput!]
  create: [IngredientCreateWithoutSubstitutesInput!]
}

input IngredientCreateNestedOneWithoutReferencesInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutReferencesInput
  create: IngredientCreateWithoutReferencesInput
}

input IngredientCreateNestedOneWithoutRelatedIngredientsInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutRelatedIngredientsInput
  create: IngredientCreateWithoutRelatedIngredientsInput
}

input IngredientCreateOrConnectWithoutParentInput {
  create: IngredientCreateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutReferencedSubstitutesInput {
  create: IngredientCreateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutReferencesInput {
  create: IngredientCreateWithoutReferencesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutRelatedIngredientsInput {
  create: IngredientCreateWithoutRelatedIngredientsInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateOrConnectWithoutSubstitutesInput {
  create: IngredientCreateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateWithoutParentInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredentInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutReferencedSubstitutesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredentInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutReferencesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutRelatedIngredientsInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredentInput
  substitutes: IngredientCreateNestedManyWithoutReferencedSubstitutesInput
  updatedAt: DateTime
}

input IngredientCreateWithoutSubstitutesInput {
  alternateNames: AlternateNameCreateNestedManyWithoutIngredientInput
  createdAt: DateTime
  isComposedIngredient: Boolean
  isValidated: Boolean
  name: String!
  parent: IngredientCreateNestedOneWithoutRelatedIngredientsInput
  plural: String!
  properties: IngredientCreatepropertiesInput
  referencedSubstitutes: IngredientCreateNestedManyWithoutSubstitutesInput
  references: ParsedSegmentCreateNestedManyWithoutIngredentInput
  relatedIngredients: IngredientCreateNestedManyWithoutParentInput
  updatedAt: DateTime
}

input IngredientCreatepropertiesInput {
  set: [Properties!]
}

input IngredientLineCreateManyNotesInput {
  blockIndex: Int!
  createdAt: DateTime
  id: Int
  isParsed: Boolean!
  lineIndex: Int!
  recipeId: Int!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateManyNotesInputEnvelope {
  data: [IngredientLineCreateManyNotesInput!]
  skipDuplicates: Boolean
}

input IngredientLineCreateManyRecipesInput {
  blockIndex: Int!
  createdAt: DateTime
  id: Int
  isParsed: Boolean!
  lineIndex: Int!
  noteId: Int!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateManyRecipesInputEnvelope {
  data: [IngredientLineCreateManyRecipesInput!]
  skipDuplicates: Boolean
}

input IngredientLineCreateNestedManyWithoutNotesInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutNotesInput!]
  create: [IngredientLineCreateWithoutNotesInput!]
  createMany: IngredientLineCreateManyNotesInputEnvelope
}

input IngredientLineCreateNestedManyWithoutRecipesInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutRecipesInput!]
  create: [IngredientLineCreateWithoutRecipesInput!]
  createMany: IngredientLineCreateManyRecipesInputEnvelope
}

input IngredientLineCreateNestedOneWithoutParsedInput {
  connect: IngredientLineWhereUniqueInput
  connectOrCreate: IngredientLineCreateOrConnectWithoutParsedInput
  create: IngredientLineCreateWithoutParsedInput
}

input IngredientLineCreateOrConnectWithoutNotesInput {
  create: IngredientLineCreateWithoutNotesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateOrConnectWithoutParsedInput {
  create: IngredientLineCreateWithoutParsedInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateOrConnectWithoutRecipesInput {
  create: IngredientLineCreateWithoutRecipesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineCreateWithoutNotesInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  parsed: ParsedSegmentCreateNestedManyWithoutIngredientLineInput
  recipes: RecipeCreateNestedOneWithoutIngredientsInput!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateWithoutParsedInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  notes: NoteCreateNestedOneWithoutIngredientsInput!
  recipes: RecipeCreateNestedOneWithoutIngredientsInput!
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineCreateWithoutRecipesInput {
  blockIndex: Int!
  createdAt: DateTime
  isParsed: Boolean!
  lineIndex: Int!
  notes: NoteCreateNestedOneWithoutIngredientsInput!
  parsed: ParsedSegmentCreateNestedManyWithoutIngredientLineInput
  reference: String!
  rule: String!
  updatedAt: DateTime
}

input IngredientLineListRelationFilter {
  every: IngredientLineWhereInput
  none: IngredientLineWhereInput
  some: IngredientLineWhereInput
}

input IngredientLineScalarWhereInput {
  AND: [IngredientLineScalarWhereInput!]
  NOT: [IngredientLineScalarWhereInput!]
  OR: [IngredientLineScalarWhereInput!]
  blockIndex: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  isParsed: BoolFilter
  lineIndex: IntFilter
  noteId: IntFilter
  recipeId: IntFilter
  reference: StringFilter
  rule: StringFilter
  updatedAt: DateTimeFilter
}

input IngredientLineUpdateManyMutationInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateManyWithWhereWithoutNotesInput {
  data: IngredientLineUpdateManyMutationInput!
  where: IngredientLineScalarWhereInput!
}

input IngredientLineUpdateManyWithWhereWithoutRecipesInput {
  data: IngredientLineUpdateManyMutationInput!
  where: IngredientLineScalarWhereInput!
}

input IngredientLineUpdateManyWithoutNotesInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutNotesInput!]
  create: [IngredientLineCreateWithoutNotesInput!]
  createMany: IngredientLineCreateManyNotesInputEnvelope
  delete: [IngredientLineWhereUniqueInput!]
  deleteMany: [IngredientLineScalarWhereInput!]
  disconnect: [IngredientLineWhereUniqueInput!]
  set: [IngredientLineWhereUniqueInput!]
  update: [IngredientLineUpdateWithWhereUniqueWithoutNotesInput!]
  updateMany: [IngredientLineUpdateManyWithWhereWithoutNotesInput!]
  upsert: [IngredientLineUpsertWithWhereUniqueWithoutNotesInput!]
}

input IngredientLineUpdateManyWithoutRecipesInput {
  connect: [IngredientLineWhereUniqueInput!]
  connectOrCreate: [IngredientLineCreateOrConnectWithoutRecipesInput!]
  create: [IngredientLineCreateWithoutRecipesInput!]
  createMany: IngredientLineCreateManyRecipesInputEnvelope
  delete: [IngredientLineWhereUniqueInput!]
  deleteMany: [IngredientLineScalarWhereInput!]
  disconnect: [IngredientLineWhereUniqueInput!]
  set: [IngredientLineWhereUniqueInput!]
  update: [IngredientLineUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [IngredientLineUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [IngredientLineUpsertWithWhereUniqueWithoutRecipesInput!]
}

input IngredientLineUpdateOneRequiredWithoutParsedInput {
  connect: IngredientLineWhereUniqueInput
  connectOrCreate: IngredientLineCreateOrConnectWithoutParsedInput
  create: IngredientLineCreateWithoutParsedInput
  update: IngredientLineUpdateWithoutParsedInput
  upsert: IngredientLineUpsertWithoutParsedInput
}

input IngredientLineUpdateWithWhereUniqueWithoutNotesInput {
  data: IngredientLineUpdateWithoutNotesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpdateWithWhereUniqueWithoutRecipesInput {
  data: IngredientLineUpdateWithoutRecipesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpdateWithoutNotesInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  parsed: ParsedSegmentUpdateManyWithoutIngredientLineInput
  recipes: RecipeUpdateOneRequiredWithoutIngredientsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateWithoutParsedInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  notes: NoteUpdateOneRequiredWithoutIngredientsInput
  recipes: RecipeUpdateOneRequiredWithoutIngredientsInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpdateWithoutRecipesInput {
  blockIndex: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isParsed: BoolFieldUpdateOperationsInput
  lineIndex: IntFieldUpdateOperationsInput
  notes: NoteUpdateOneRequiredWithoutIngredientsInput
  parsed: ParsedSegmentUpdateManyWithoutIngredientLineInput
  reference: StringFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientLineUpsertWithWhereUniqueWithoutNotesInput {
  create: IngredientLineCreateWithoutNotesInput!
  update: IngredientLineUpdateWithoutNotesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpsertWithWhereUniqueWithoutRecipesInput {
  create: IngredientLineCreateWithoutRecipesInput!
  update: IngredientLineUpdateWithoutRecipesInput!
  where: IngredientLineWhereUniqueInput!
}

input IngredientLineUpsertWithoutParsedInput {
  create: IngredientLineCreateWithoutParsedInput!
  update: IngredientLineUpdateWithoutParsedInput!
}

input IngredientLineWhereInput {
  AND: [IngredientLineWhereInput!]
  NOT: [IngredientLineWhereInput!]
  OR: [IngredientLineWhereInput!]
  blockIndex: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  isParsed: BoolFilter
  lineIndex: IntFilter
  noteId: IntFilter
  notes: NoteWhereInput
  parsed: ParsedSegmentListRelationFilter
  recipeId: IntFilter
  recipes: RecipeWhereInput
  reference: StringFilter
  rule: StringFilter
  updatedAt: DateTimeFilter
}

input IngredientLineWhereUniqueInput {
  id: Int
}

input IngredientListRelationFilter {
  every: IngredientWhereInput
  none: IngredientWhereInput
  some: IngredientWhereInput
}

input IngredientScalarWhereInput {
  AND: [IngredientScalarWhereInput!]
  NOT: [IngredientScalarWhereInput!]
  OR: [IngredientScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  isComposedIngredient: BoolFilter
  isValidated: BoolFilter
  name: StringFilter
  parentId: IntNullableFilter
  plural: StringFilter
  properties: EnumPropertiesNullableListFilter
  updatedAt: DateTimeFilter
}

input IngredientUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateManyWithWhereWithoutParentInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithWhereWithoutReferencedSubstitutesInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithWhereWithoutSubstitutesInput {
  data: IngredientUpdateManyMutationInput!
  where: IngredientScalarWhereInput!
}

input IngredientUpdateManyWithoutParentInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutParentInput!]
  create: [IngredientCreateWithoutParentInput!]
  createMany: IngredientCreateManyParentInputEnvelope
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutParentInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutParentInput!]
}

input IngredientUpdateManyWithoutReferencedSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutReferencedSubstitutesInput!]
  create: [IngredientCreateWithoutReferencedSubstitutesInput!]
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutReferencedSubstitutesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutReferencedSubstitutesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutReferencedSubstitutesInput!]
}

input IngredientUpdateManyWithoutSubstitutesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSubstitutesInput!]
  create: [IngredientCreateWithoutSubstitutesInput!]
  delete: [IngredientWhereUniqueInput!]
  deleteMany: [IngredientScalarWhereInput!]
  disconnect: [IngredientWhereUniqueInput!]
  set: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutSubstitutesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutSubstitutesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutSubstitutesInput!]
}

input IngredientUpdateOneRequiredWithoutReferencesInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutReferencesInput
  create: IngredientCreateWithoutReferencesInput
  update: IngredientUpdateWithoutReferencesInput
  upsert: IngredientUpsertWithoutReferencesInput
}

input IngredientUpdateOneWithoutRelatedIngredientsInput {
  connect: IngredientWhereUniqueInput
  connectOrCreate: IngredientCreateOrConnectWithoutRelatedIngredientsInput
  create: IngredientCreateWithoutRelatedIngredientsInput
  delete: Boolean
  disconnect: Boolean
  update: IngredientUpdateWithoutRelatedIngredientsInput
  upsert: IngredientUpsertWithoutRelatedIngredientsInput
}

input IngredientUpdateWithWhereUniqueWithoutParentInput {
  data: IngredientUpdateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithWhereUniqueWithoutReferencedSubstitutesInput {
  data: IngredientUpdateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithWhereUniqueWithoutSubstitutesInput {
  data: IngredientUpdateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpdateWithoutParentInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredentInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutReferencedSubstitutesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  references: ParsedSegmentUpdateManyWithoutIngredentInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutReferencesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutRelatedIngredientsInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredentInput
  substitutes: IngredientUpdateManyWithoutReferencedSubstitutesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdateWithoutSubstitutesInput {
  alternateNames: AlternateNameUpdateManyWithoutIngredientInput
  createdAt: DateTimeFieldUpdateOperationsInput
  isComposedIngredient: BoolFieldUpdateOperationsInput
  isValidated: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: IngredientUpdateOneWithoutRelatedIngredientsInput
  plural: StringFieldUpdateOperationsInput
  properties: IngredientUpdatepropertiesInput
  referencedSubstitutes: IngredientUpdateManyWithoutSubstitutesInput
  references: ParsedSegmentUpdateManyWithoutIngredentInput
  relatedIngredients: IngredientUpdateManyWithoutParentInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IngredientUpdatepropertiesInput {
  push: Properties
  set: [Properties!]
}

input IngredientUpsertWithWhereUniqueWithoutParentInput {
  create: IngredientCreateWithoutParentInput!
  update: IngredientUpdateWithoutParentInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithWhereUniqueWithoutReferencedSubstitutesInput {
  create: IngredientCreateWithoutReferencedSubstitutesInput!
  update: IngredientUpdateWithoutReferencedSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithWhereUniqueWithoutSubstitutesInput {
  create: IngredientCreateWithoutSubstitutesInput!
  update: IngredientUpdateWithoutSubstitutesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientUpsertWithoutReferencesInput {
  create: IngredientCreateWithoutReferencesInput!
  update: IngredientUpdateWithoutReferencesInput!
}

input IngredientUpsertWithoutRelatedIngredientsInput {
  create: IngredientCreateWithoutRelatedIngredientsInput!
  update: IngredientUpdateWithoutRelatedIngredientsInput!
}

input IngredientWhereInput {
  AND: [IngredientWhereInput!]
  NOT: [IngredientWhereInput!]
  OR: [IngredientWhereInput!]
  alternateNames: AlternateNameListRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  isComposedIngredient: BoolFilter
  isValidated: BoolFilter
  name: StringFilter
  parent: IngredientWhereInput
  parentId: IntNullableFilter
  plural: StringFilter
  properties: EnumPropertiesNullableListFilter
  referencedSubstitutes: IngredientListRelationFilter
  references: ParsedSegmentListRelationFilter
  relatedIngredients: IngredientListRelationFilter
  substitutes: IngredientListRelationFilter
  updatedAt: DateTimeFilter
}

input IngredientWhereUniqueInput {
  id: Int
  name: String
  plural: String
}

input InstructionLineCreateManyNotesInput {
  createdAt: DateTime
  id: Int
  recipeId: Int!
  updatedAt: DateTime
}

input InstructionLineCreateManyNotesInputEnvelope {
  data: [InstructionLineCreateManyNotesInput!]
  skipDuplicates: Boolean
}

input InstructionLineCreateManyRecipesInput {
  createdAt: DateTime
  id: Int
  noteId: Int!
  updatedAt: DateTime
}

input InstructionLineCreateManyRecipesInputEnvelope {
  data: [InstructionLineCreateManyRecipesInput!]
  skipDuplicates: Boolean
}

input InstructionLineCreateNestedManyWithoutNotesInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutNotesInput!]
  create: [InstructionLineCreateWithoutNotesInput!]
  createMany: InstructionLineCreateManyNotesInputEnvelope
}

input InstructionLineCreateNestedManyWithoutRecipesInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutRecipesInput!]
  create: [InstructionLineCreateWithoutRecipesInput!]
  createMany: InstructionLineCreateManyRecipesInputEnvelope
}

input InstructionLineCreateOrConnectWithoutNotesInput {
  create: InstructionLineCreateWithoutNotesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineCreateOrConnectWithoutRecipesInput {
  create: InstructionLineCreateWithoutRecipesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineCreateWithoutNotesInput {
  createdAt: DateTime
  recipes: RecipeCreateNestedOneWithoutInstructionsInput!
  updatedAt: DateTime
}

input InstructionLineCreateWithoutRecipesInput {
  createdAt: DateTime
  notes: NoteCreateNestedOneWithoutInstructionsInput!
  updatedAt: DateTime
}

input InstructionLineListRelationFilter {
  every: InstructionLineWhereInput
  none: InstructionLineWhereInput
  some: InstructionLineWhereInput
}

input InstructionLineScalarWhereInput {
  AND: [InstructionLineScalarWhereInput!]
  NOT: [InstructionLineScalarWhereInput!]
  OR: [InstructionLineScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  noteId: IntFilter
  recipeId: IntFilter
  updatedAt: DateTimeFilter
}

input InstructionLineUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpdateManyWithWhereWithoutNotesInput {
  data: InstructionLineUpdateManyMutationInput!
  where: InstructionLineScalarWhereInput!
}

input InstructionLineUpdateManyWithWhereWithoutRecipesInput {
  data: InstructionLineUpdateManyMutationInput!
  where: InstructionLineScalarWhereInput!
}

input InstructionLineUpdateManyWithoutNotesInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutNotesInput!]
  create: [InstructionLineCreateWithoutNotesInput!]
  createMany: InstructionLineCreateManyNotesInputEnvelope
  delete: [InstructionLineWhereUniqueInput!]
  deleteMany: [InstructionLineScalarWhereInput!]
  disconnect: [InstructionLineWhereUniqueInput!]
  set: [InstructionLineWhereUniqueInput!]
  update: [InstructionLineUpdateWithWhereUniqueWithoutNotesInput!]
  updateMany: [InstructionLineUpdateManyWithWhereWithoutNotesInput!]
  upsert: [InstructionLineUpsertWithWhereUniqueWithoutNotesInput!]
}

input InstructionLineUpdateManyWithoutRecipesInput {
  connect: [InstructionLineWhereUniqueInput!]
  connectOrCreate: [InstructionLineCreateOrConnectWithoutRecipesInput!]
  create: [InstructionLineCreateWithoutRecipesInput!]
  createMany: InstructionLineCreateManyRecipesInputEnvelope
  delete: [InstructionLineWhereUniqueInput!]
  deleteMany: [InstructionLineScalarWhereInput!]
  disconnect: [InstructionLineWhereUniqueInput!]
  set: [InstructionLineWhereUniqueInput!]
  update: [InstructionLineUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [InstructionLineUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [InstructionLineUpsertWithWhereUniqueWithoutRecipesInput!]
}

input InstructionLineUpdateWithWhereUniqueWithoutNotesInput {
  data: InstructionLineUpdateWithoutNotesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpdateWithWhereUniqueWithoutRecipesInput {
  data: InstructionLineUpdateWithoutRecipesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpdateWithoutNotesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  recipes: RecipeUpdateOneRequiredWithoutInstructionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpdateWithoutRecipesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  notes: NoteUpdateOneRequiredWithoutInstructionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InstructionLineUpsertWithWhereUniqueWithoutNotesInput {
  create: InstructionLineCreateWithoutNotesInput!
  update: InstructionLineUpdateWithoutNotesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineUpsertWithWhereUniqueWithoutRecipesInput {
  create: InstructionLineCreateWithoutRecipesInput!
  update: InstructionLineUpdateWithoutRecipesInput!
  where: InstructionLineWhereUniqueInput!
}

input InstructionLineWhereInput {
  AND: [InstructionLineWhereInput!]
  NOT: [InstructionLineWhereInput!]
  OR: [InstructionLineWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  noteId: IntFilter
  notes: NoteWhereInput
  recipeId: IntFilter
  recipes: RecipeWhereInput
  updatedAt: DateTimeFilter
}

input InstructionLineWhereUniqueInput {
  id: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  bigRedButton: String
  createOneUser(data: UserCreateInput!): User!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): AffectedRowsOutput!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NoteCreateNestedOneWithoutIngredientsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutIngredientsInput
  create: NoteCreateWithoutIngredientsInput
}

input NoteCreateNestedOneWithoutInstructionsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutInstructionsInput
  create: NoteCreateWithoutInstructionsInput
}

input NoteCreateOrConnectWithoutIngredientsInput {
  create: NoteCreateWithoutIngredientsInput!
  where: NoteWhereUniqueInput!
}

input NoteCreateOrConnectWithoutInstructionsInput {
  create: NoteCreateWithoutInstructionsInput!
  where: NoteWhereUniqueInput!
}

input NoteCreateWithoutIngredientsInput {
  categories: NoteCreatecategoriesInput
  content: String!
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  instructions: InstructionLineCreateNestedManyWithoutNotesInput
  isParsed: Boolean
  source: String
  tags: NoteCreatetagsInput
  title: String!
  updatedAt: DateTime
}

input NoteCreateWithoutInstructionsInput {
  categories: NoteCreatecategoriesInput
  content: String!
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  ingredients: IngredientLineCreateNestedManyWithoutNotesInput
  isParsed: Boolean
  source: String
  tags: NoteCreatetagsInput
  title: String!
  updatedAt: DateTime
}

input NoteCreatecategoriesInput {
  set: [String!]
}

input NoteCreatetagsInput {
  set: [String!]
}

input NoteUpdateOneRequiredWithoutIngredientsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutIngredientsInput
  create: NoteCreateWithoutIngredientsInput
  update: NoteUpdateWithoutIngredientsInput
  upsert: NoteUpsertWithoutIngredientsInput
}

input NoteUpdateOneRequiredWithoutInstructionsInput {
  connect: NoteWhereUniqueInput
  connectOrCreate: NoteCreateOrConnectWithoutInstructionsInput
  create: NoteCreateWithoutInstructionsInput
  update: NoteUpdateWithoutInstructionsInput
  upsert: NoteUpsertWithoutInstructionsInput
}

input NoteUpdateWithoutIngredientsInput {
  categories: NoteUpdatecategoriesInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  instructions: InstructionLineUpdateManyWithoutNotesInput
  isParsed: BoolFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  tags: NoteUpdatetagsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NoteUpdateWithoutInstructionsInput {
  categories: NoteUpdatecategoriesInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  ingredients: IngredientLineUpdateManyWithoutNotesInput
  isParsed: BoolFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  tags: NoteUpdatetagsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NoteUpdatecategoriesInput {
  push: String
  set: [String!]
}

input NoteUpdatetagsInput {
  push: String
  set: [String!]
}

input NoteUpsertWithoutIngredientsInput {
  create: NoteCreateWithoutIngredientsInput!
  update: NoteUpdateWithoutIngredientsInput!
}

input NoteUpsertWithoutInstructionsInput {
  create: NoteCreateWithoutInstructionsInput!
  update: NoteUpdateWithoutInstructionsInput!
}

input NoteWhereInput {
  AND: [NoteWhereInput!]
  NOT: [NoteWhereInput!]
  OR: [NoteWhereInput!]
  categories: StringNullableListFilter
  content: StringFilter
  createdAt: DateTimeFilter
  evernoteGUID: StringFilter
  id: IntFilter
  image: StringFilter
  ingredients: IngredientLineListRelationFilter
  instructions: InstructionLineListRelationFilter
  isParsed: BoolFilter
  source: StringNullableFilter
  tags: StringNullableListFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input NoteWhereUniqueInput {
  id: Int
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumRoleFieldUpdateOperationsInput {
  set: Role
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input ParsedSegmentCreateManyIngredentInput {
  createdAt: DateTime
  id: Int
  index: Int!
  ingredientLineId: Int!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateManyIngredentInputEnvelope {
  data: [ParsedSegmentCreateManyIngredentInput!]
  skipDuplicates: Boolean
}

input ParsedSegmentCreateManyIngredientLineInput {
  createdAt: DateTime
  id: Int
  index: Int!
  ingredientId: Int!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateManyIngredientLineInputEnvelope {
  data: [ParsedSegmentCreateManyIngredientLineInput!]
  skipDuplicates: Boolean
}

input ParsedSegmentCreateNestedManyWithoutIngredentInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredentInput!]
  create: [ParsedSegmentCreateWithoutIngredentInput!]
  createMany: ParsedSegmentCreateManyIngredentInputEnvelope
}

input ParsedSegmentCreateNestedManyWithoutIngredientLineInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientLineInput!]
  create: [ParsedSegmentCreateWithoutIngredientLineInput!]
  createMany: ParsedSegmentCreateManyIngredientLineInputEnvelope
}

input ParsedSegmentCreateOrConnectWithoutIngredentInput {
  create: ParsedSegmentCreateWithoutIngredentInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentCreateOrConnectWithoutIngredientLineInput {
  create: ParsedSegmentCreateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentCreateWithoutIngredentInput {
  createdAt: DateTime
  index: Int!
  ingredientLine: IngredientLineCreateNestedOneWithoutParsedInput!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentCreateWithoutIngredientLineInput {
  createdAt: DateTime
  index: Int!
  ingredent: IngredientCreateNestedOneWithoutReferencesInput!
  rule: String!
  type: String!
  updatedAt: DateTime
  value: String!
}

input ParsedSegmentListRelationFilter {
  every: ParsedSegmentWhereInput
  none: ParsedSegmentWhereInput
  some: ParsedSegmentWhereInput
}

input ParsedSegmentScalarWhereInput {
  AND: [ParsedSegmentScalarWhereInput!]
  NOT: [ParsedSegmentScalarWhereInput!]
  OR: [ParsedSegmentScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  index: IntFilter
  ingredientId: IntFilter
  ingredientLineId: IntFilter
  rule: StringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  value: StringFilter
}

input ParsedSegmentUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpdateManyWithWhereWithoutIngredentInput {
  data: ParsedSegmentUpdateManyMutationInput!
  where: ParsedSegmentScalarWhereInput!
}

input ParsedSegmentUpdateManyWithWhereWithoutIngredientLineInput {
  data: ParsedSegmentUpdateManyMutationInput!
  where: ParsedSegmentScalarWhereInput!
}

input ParsedSegmentUpdateManyWithoutIngredentInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredentInput!]
  create: [ParsedSegmentCreateWithoutIngredentInput!]
  createMany: ParsedSegmentCreateManyIngredentInputEnvelope
  delete: [ParsedSegmentWhereUniqueInput!]
  deleteMany: [ParsedSegmentScalarWhereInput!]
  disconnect: [ParsedSegmentWhereUniqueInput!]
  set: [ParsedSegmentWhereUniqueInput!]
  update: [ParsedSegmentUpdateWithWhereUniqueWithoutIngredentInput!]
  updateMany: [ParsedSegmentUpdateManyWithWhereWithoutIngredentInput!]
  upsert: [ParsedSegmentUpsertWithWhereUniqueWithoutIngredentInput!]
}

input ParsedSegmentUpdateManyWithoutIngredientLineInput {
  connect: [ParsedSegmentWhereUniqueInput!]
  connectOrCreate: [ParsedSegmentCreateOrConnectWithoutIngredientLineInput!]
  create: [ParsedSegmentCreateWithoutIngredientLineInput!]
  createMany: ParsedSegmentCreateManyIngredientLineInputEnvelope
  delete: [ParsedSegmentWhereUniqueInput!]
  deleteMany: [ParsedSegmentScalarWhereInput!]
  disconnect: [ParsedSegmentWhereUniqueInput!]
  set: [ParsedSegmentWhereUniqueInput!]
  update: [ParsedSegmentUpdateWithWhereUniqueWithoutIngredientLineInput!]
  updateMany: [ParsedSegmentUpdateManyWithWhereWithoutIngredientLineInput!]
  upsert: [ParsedSegmentUpsertWithWhereUniqueWithoutIngredientLineInput!]
}

input ParsedSegmentUpdateWithWhereUniqueWithoutIngredentInput {
  data: ParsedSegmentUpdateWithoutIngredentInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpdateWithWhereUniqueWithoutIngredientLineInput {
  data: ParsedSegmentUpdateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpdateWithoutIngredentInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  ingredientLine: IngredientLineUpdateOneRequiredWithoutParsedInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpdateWithoutIngredientLineInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  ingredent: IngredientUpdateOneRequiredWithoutReferencesInput
  rule: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ParsedSegmentUpsertWithWhereUniqueWithoutIngredentInput {
  create: ParsedSegmentCreateWithoutIngredentInput!
  update: ParsedSegmentUpdateWithoutIngredentInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentUpsertWithWhereUniqueWithoutIngredientLineInput {
  create: ParsedSegmentCreateWithoutIngredientLineInput!
  update: ParsedSegmentUpdateWithoutIngredientLineInput!
  where: ParsedSegmentWhereUniqueInput!
}

input ParsedSegmentWhereInput {
  AND: [ParsedSegmentWhereInput!]
  NOT: [ParsedSegmentWhereInput!]
  OR: [ParsedSegmentWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  index: IntFilter
  ingredent: IngredientWhereInput
  ingredientId: IntFilter
  ingredientLine: IngredientLineWhereInput
  ingredientLineId: IntFilter
  rule: StringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  value: StringFilter
}

input ParsedSegmentWhereUniqueInput {
  id: Int
}

enum Properties {
  DAIRY
  FISH
  GLUTEN
  MEAT
  POULTRY
  SOY
}

type Query {
  allUsers: [User]
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

input RecipeCreateManyImportedUserInput {
  bookId: Int!
  createdAt: DateTime
  evernoteGUID: String!
  id: Int
  image: String!
  sources: RecipeCreateManysourcesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateManyImportedUserInputEnvelope {
  data: [RecipeCreateManyImportedUserInput!]
  skipDuplicates: Boolean
}

input RecipeCreateManysourcesInput {
  set: [String!]
}

input RecipeCreateNestedManyWithoutImportedUserInput {
  connect: [RecipeWhereUniqueInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutImportedUserInput!]
  create: [RecipeCreateWithoutImportedUserInput!]
  createMany: RecipeCreateManyImportedUserInputEnvelope
}

input RecipeCreateNestedOneWithoutIngredientsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutIngredientsInput
  create: RecipeCreateWithoutIngredientsInput
}

input RecipeCreateNestedOneWithoutInstructionsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutInstructionsInput
  create: RecipeCreateWithoutInstructionsInput
}

input RecipeCreateOrConnectWithoutImportedUserInput {
  create: RecipeCreateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateOrConnectWithoutIngredientsInput {
  create: RecipeCreateWithoutIngredientsInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateOrConnectWithoutInstructionsInput {
  create: RecipeCreateWithoutInstructionsInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateWithoutImportedUserInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  ingredients: IngredientLineCreateNestedManyWithoutRecipesInput
  instructions: InstructionLineCreateNestedManyWithoutRecipesInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateWithoutIngredientsInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  importedUser: UserCreateNestedOneWithoutImportedRecipesInput!
  instructions: InstructionLineCreateNestedManyWithoutRecipesInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreateWithoutInstructionsInput {
  book: BookCreateNestedOneWithoutRecipesInput!
  categories: CategoryCreateNestedManyWithoutRecipesInput
  createdAt: DateTime
  evernoteGUID: String!
  image: String!
  importedUser: UserCreateNestedOneWithoutImportedRecipesInput!
  ingredients: IngredientLineCreateNestedManyWithoutRecipesInput
  sources: RecipeCreatesourcesInput
  tags: TagCreateNestedManyWithoutRecipesInput
  title: String!
  updatedAt: DateTime
}

input RecipeCreatesourcesInput {
  set: [String!]
}

input RecipeListRelationFilter {
  every: RecipeWhereInput
  none: RecipeWhereInput
  some: RecipeWhereInput
}

input RecipeScalarWhereInput {
  AND: [RecipeScalarWhereInput!]
  NOT: [RecipeScalarWhereInput!]
  OR: [RecipeScalarWhereInput!]
  bookId: IntFilter
  createdAt: DateTimeFilter
  evernoteGUID: StringFilter
  id: IntFilter
  image: StringFilter
  importedUserId: IntFilter
  sources: StringNullableListFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input RecipeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  sources: RecipeUpdatesourcesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateManyWithWhereWithoutImportedUserInput {
  data: RecipeUpdateManyMutationInput!
  where: RecipeScalarWhereInput!
}

input RecipeUpdateManyWithoutImportedUserInput {
  connect: [RecipeWhereUniqueInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutImportedUserInput!]
  create: [RecipeCreateWithoutImportedUserInput!]
  createMany: RecipeCreateManyImportedUserInputEnvelope
  delete: [RecipeWhereUniqueInput!]
  deleteMany: [RecipeScalarWhereInput!]
  disconnect: [RecipeWhereUniqueInput!]
  set: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutImportedUserInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutImportedUserInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutImportedUserInput!]
}

input RecipeUpdateOneRequiredWithoutIngredientsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutIngredientsInput
  create: RecipeCreateWithoutIngredientsInput
  update: RecipeUpdateWithoutIngredientsInput
  upsert: RecipeUpsertWithoutIngredientsInput
}

input RecipeUpdateOneRequiredWithoutInstructionsInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutInstructionsInput
  create: RecipeCreateWithoutInstructionsInput
  update: RecipeUpdateWithoutInstructionsInput
  upsert: RecipeUpsertWithoutInstructionsInput
}

input RecipeUpdateWithWhereUniqueWithoutImportedUserInput {
  data: RecipeUpdateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeUpdateWithoutImportedUserInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  ingredients: IngredientLineUpdateManyWithoutRecipesInput
  instructions: InstructionLineUpdateManyWithoutRecipesInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateWithoutIngredientsInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  importedUser: UserUpdateOneRequiredWithoutImportedRecipesInput
  instructions: InstructionLineUpdateManyWithoutRecipesInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdateWithoutInstructionsInput {
  book: BookUpdateOneRequiredWithoutRecipesInput
  categories: CategoryUpdateManyWithoutRecipesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  evernoteGUID: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  importedUser: UserUpdateOneRequiredWithoutImportedRecipesInput
  ingredients: IngredientLineUpdateManyWithoutRecipesInput
  sources: RecipeUpdatesourcesInput
  tags: TagUpdateManyWithoutRecipesInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RecipeUpdatesourcesInput {
  push: String
  set: [String!]
}

input RecipeUpsertWithWhereUniqueWithoutImportedUserInput {
  create: RecipeCreateWithoutImportedUserInput!
  update: RecipeUpdateWithoutImportedUserInput!
  where: RecipeWhereUniqueInput!
}

input RecipeUpsertWithoutIngredientsInput {
  create: RecipeCreateWithoutIngredientsInput!
  update: RecipeUpdateWithoutIngredientsInput!
}

input RecipeUpsertWithoutInstructionsInput {
  create: RecipeCreateWithoutInstructionsInput!
  update: RecipeUpdateWithoutInstructionsInput!
}

input RecipeWhereInput {
  AND: [RecipeWhereInput!]
  NOT: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  book: BookWhereInput
  bookId: IntFilter
  categories: CategoryListRelationFilter
  createdAt: DateTimeFilter
  evernoteGUID: StringFilter
  id: IntFilter
  image: StringFilter
  importedUser: UserWhereInput
  importedUserId: IntFilter
  ingredients: IngredientLineListRelationFilter
  instructions: InstructionLineListRelationFilter
  sources: StringNullableListFilter
  tags: TagListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input RecipeWhereUniqueInput {
  id: Int
}

enum Role {
  ADMIN
  USER
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input TagCreateNestedManyWithoutRecipesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutRecipesInput!]
  create: [TagCreateWithoutRecipesInput!]
}

input TagCreateOrConnectWithoutRecipesInput {
  create: TagCreateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutRecipesInput {
  evernoteGUID: String!
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
}

input TagUpdateManyMutationInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutRecipesInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutRecipesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutRecipesInput!]
  create: [TagCreateWithoutRecipesInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [TagUpdateManyWithWhereWithoutRecipesInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutRecipesInput!]
}

input TagUpdateWithWhereUniqueWithoutRecipesInput {
  data: TagUpdateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutRecipesInput {
  evernoteGUID: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutRecipesInput {
  create: TagCreateWithoutRecipesInput!
  update: TagUpdateWithoutRecipesInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  evernoteGUID: StringFilter
  id: IntFilter
  name: StringFilter
  recipes: RecipeListRelationFilter
}

input TagWhereUniqueInput {
  id: Int
  name: String
}

type User {
  createdAt: DateTime!
  email: String
  emailVerified: DateTime
  id: Int!
  image: String
  name: String
  updatedAt: DateTime!
}

input UserCreateInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  importedRecipes: RecipeCreateNestedManyWithoutImportedUserInput
  name: String
  role: Role
  updatedAt: DateTime
}

input UserCreateNestedOneWithoutImportedRecipesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImportedRecipesInput
  create: UserCreateWithoutImportedRecipesInput
}

input UserCreateOrConnectWithoutImportedRecipesInput {
  create: UserCreateWithoutImportedRecipesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutImportedRecipesInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  name: String
  role: Role
  updatedAt: DateTime
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  importedRecipes: RecipeUpdateManyWithoutImportedUserInput
  name: NullableStringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutImportedRecipesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImportedRecipesInput
  create: UserCreateWithoutImportedRecipesInput
  update: UserUpdateWithoutImportedRecipesInput
  upsert: UserUpsertWithoutImportedRecipesInput
}

input UserUpdateWithoutImportedRecipesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutImportedRecipesInput {
  create: UserCreateWithoutImportedRecipesInput!
  update: UserUpdateWithoutImportedRecipesInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  id: IntFilter
  image: StringNullableFilter
  importedRecipes: RecipeListRelationFilter
  name: StringNullableFilter
  role: EnumRoleNullableFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
